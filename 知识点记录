# 操作系统：
## 第一部分：进程
q1: 作业、进程、线程、管程的定义？
a1: 作业是用户在处理一次事务过程中要求计算机系统所做工作的集合（包括用户程序、数据、命令等），作业是一系列有序的动作构成的。
    进程是一个程序在一个数据集合上的运行过程。（即使是同一个程序在同一个数据集合上多次运行，都属于不同的进程！）
    线程是进程的一个实体，是被系统独立调度和执行的基本单位。
    管程是定义了一个数据结构和一组操作（能为并发进程所执行），这组操作能同步进程和改变管程中的数据。

q2: 进程间的通信如何实现？
a2: 进程间通信（Interprocess communication, IPC）是一组编程接口，让不同的进程能在一个操作系统中同时运行并相互传递、交换信息。
    IPC方法包括 管道(PIPE)，消息队列，共享内存以及套接字(Socket)。
    管道中又分为普通管道（单工，只能单向传输），流管道（半双工，可以双向传输）。
    消息队列可以被多个进程所共享，一个消息队列放不下可以用多个消息队列。

q3: 什么是死锁，死锁发生的条件是什么？如何预防死锁？
a3: 死锁是指两个或以上的进程在执行过程中，因争夺资源而造成的一种互相等待的现象。
    死锁发生的必要条件包括4点，缺一不可：
    1）互斥条件，一个资源每次只能被一个进程使用。
    2）请求与保持条件，一个进程因请求资源而阻塞时，对已持有的资源保持不放。
    3）不剥夺条件，进程已获得的资源，在未使用完之前，不可被剥夺。
    4）循环等待条件，若干进程之间形成一种头尾相接的循环等待资源关系。
    预防死锁的措施包括3点（因为无法破坏互斥条件）：
    1）采用资源静态分配策略，破坏“部分分配”条件
    2）允许进程剥夺使用其他进程占有的资源，即破坏上述条件3
    3）采用资源有序分配法，破坏“环路”条件

q4: 进程的三种基本状态？
a4: 1）就绪态（Ready），当进程分配到除CPU以外的所有必要的资源时，此时称为就绪态
    2）执行态（Running），当进程正在处理机上进行，此时称为执行态
    3）阻塞态（Blocked），“正在执行”的进程，由于等待某个事件发生而无法执行时，此时称为阻塞态

## 第二部分：线程
q1: 进程和线程的差别？
a1: 进程是程序的一次执行，线程可以理解为进程中执行的一段程序片段。
    同一进程中的两端代码不能够同时执行，除非引入线程。
    线程是属于进程的，当进程退出时该进程所产生的线程都会被强制退出并清除。
    进程间可以通过IPC通信，但线程不可以。


## 第三部分：内存管理
q1: windows系统内存管理有几种方式，优缺点是什么？
a1: 内存管理方式主要分为：页式管理、段式管理、段页式管理。
    页式管理的基本原理是将进程的虚拟空间划分为若干个长度相等的页(page)



























